(()=>{"use strict";class t{constructor(t,e,o,l){this.title=t,this.description=e,this.dueDate=o,this.priority=l,this.notes=[],this.checklist=[]}}class e{constructor(t){this.title=t,this.items={}}}function o(t,e,o){let l=document.createElement("button");l.dataset.id=t,l.innerHTML=e.title,console.log(l),console.log(o),o.appendChild(l)}document.getElementById("add-todo").addEventListener("click",(function(){let e=function(){let e=function(){let t=document.getElementById("title").value,e=document.getElementById("description").value,o=document.getElementById("dueDate").value,l=document.getElementById("priority").value;return console.log(t),[t,e,o,l]}(),o=e[0],l=e[1],n=e[2],i=e[3];return new t(o,l,n,i)}();console.log(e)})),window.onload=function(){let t;t=0==localStorage.length?function(){let t={},o=("Default List",new e("Default List"));return t[1]=o,localStorage.setItem("listCollection",JSON.stringify(t)),t}():JSON.parse(localStorage.getItem("listCollection"));let l=document.getElementById("lists-container");console.log(t),console.log(l);for(const[e,n]of Object.entries(t))console.log(e),console.log(n),o(e,n,l)}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFDSkMsWUFBWUMsRUFBT0MsRUFBYUMsRUFBU0MsR0FDdkNDLEtBQUtKLE1BQVFBLEVBQ2JJLEtBQUtILFlBQWNBLEVBQ25CRyxLQUFLRixRQUFVQSxFQUNmRSxLQUFLRCxTQUFXQSxFQUNoQkMsS0FBS0MsTUFBUSxHQUNiRCxLQUFLRSxVQUFZLElDUHJCLE1BQU1DLEVBQ0pSLFlBQVlDLEdBQ1ZJLEtBQUtKLE1BQVFBLEVBQ2JJLEtBQUtJLE1BQVEsSUN3Q2pCLFNBQVNDLEVBQVlDLEVBQUtDLEVBQU9DLEdBQy9CLElBQUlDLEVBQVNDLFNBQVNDLGNBQWMsVUFDcENGLEVBQU9HLFFBQVFDLEdBQUtQLEVBQ3BCRyxFQUFPSyxVQUFZUCxFQUFNWCxNQUV6Qm1CLFFBQVFDLElBQUlQLEdBQ1pNLFFBQVFDLElBQUlSLEdBRVpBLEVBQVVTLFlBQVlSLEdBaER4QkMsU0FBU1EsZUFBZSxZQUFZQyxpQkFBaUIsU0FBUyxXQUM1RCxJQUFJQyxFRk9TLFdBQ2IsSUFBSUMsRUFXTixXQUNFLElBQUl6QixFQUFRYyxTQUFTUSxlQUFlLFNBQVNYLE1BQ3pDVixFQUFjYSxTQUFTUSxlQUFlLGVBQWVYLE1BQ3JEVCxFQUFVWSxTQUFTUSxlQUFlLFdBQVdYLE1BQzdDUixFQUFXVyxTQUFTUSxlQUFlLFlBQVlYLE1BSW5ELE9BRkFRLFFBQVFDLElBQUlwQixHQUVMLENBQ0xBLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBdkJTdUIsR0FFUDFCLEVBQVF5QixFQUFLLEdBQ2J4QixFQUFjd0IsRUFBSyxHQUNuQnZCLEVBQVV1QixFQUFLLEdBQ2Z0QixFQUFXc0IsRUFBSyxHQUdwQixPQURXLElBQUkzQixFQUFTRSxFQUFPQyxFQUFhQyxFQUFTQyxHRWYxQ3dCLEdBQ1hSLFFBQVFDLElBQUlJLE1BR2RJLE9BQU9DLE9BQVMsV0FDZCxJQUFJQyxFQUVGQSxFQUR5QixHQUF2QkMsYUFBYUMsT0FrQm5CLFdBQ0UsSUFBSUYsRUFBaUIsR0FDakJHLEdBQXNCLGVEdEJmLElBQUkxQixFQ3NCVyxpQkFLMUIsT0FIQXVCLEVBQWUsR0FBS0csRUFDcEJGLGFBQWFHLFFBQVEsaUJBQWtCQyxLQUFLQyxVQUFVTixJQUUvQ0EsRUF4QllPLEdBNEJFRixLQUFLRyxNQUFNUCxhQUFhUSxRQUFRLG1CQXhCckQsSUFBSTNCLEVBQVlFLFNBQVNRLGVBQWUsbUJBQ3hDSCxRQUFRQyxJQUFJVSxHQUNaWCxRQUFRQyxJQUFJUixHQUdaLElBQUssTUFBT0YsRUFBS0MsS0FBVTZCLE9BQU9DLFFBQVFYLEdBQ3hDWCxRQUFRQyxJQUFJVixHQUNaUyxRQUFRQyxJQUFJVCxHQUVaRixFQUFZQyxFQUFLQyxFQUFPQyxLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Rpbi10b2RvLy4vc3JjL3RvZG8taXRlbS5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8vLi9zcmMvdG9kby1saXN0LmpzIiwid2VicGFjazovL29kaW4tdG9kby8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyB0b2RvSXRlbSB7XG4gIGNvbnN0cnVjdG9yKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHkpIHtcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgIHRoaXMubm90ZXMgPSBbXTtcbiAgICB0aGlzLmNoZWNrbGlzdCA9IFtdO1xuICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlTmV3VG9EbygpIHtcbiAgbGV0IGluZm8gPSBnZXRUb2RvSW5mbygpO1xuXG4gIGxldCB0aXRsZSA9IGluZm9bMF0sXG4gICAgICBkZXNjcmlwdGlvbiA9IGluZm9bMV0sIFxuICAgICAgZHVlRGF0ZSA9IGluZm9bMl0sIFxuICAgICAgcHJpb3JpdHkgPSBpbmZvWzNdO1xuXG4gIGxldCB0b2RvID0gbmV3IHRvZG9JdGVtKHRpdGxlLCBkZXNjcmlwdGlvbiwgZHVlRGF0ZSwgcHJpb3JpdHkpO1xuICByZXR1cm4gdG9kbztcbn07XG5cbmZ1bmN0aW9uIGdldFRvZG9JbmZvKCkge1xuICBsZXQgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpdGxlXCIpLnZhbHVlO1xuICBsZXQgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2NyaXB0aW9uXCIpLnZhbHVlO1xuICBsZXQgZHVlRGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHVlRGF0ZVwiKS52YWx1ZTtcbiAgbGV0IHByaW9yaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmlvcml0eVwiKS52YWx1ZTtcblxuICBjb25zb2xlLmxvZyh0aXRsZSk7XG5cbiAgcmV0dXJuIFtcbiAgICB0aXRsZSwgXG4gICAgZGVzY3JpcHRpb24sXG4gICAgZHVlRGF0ZSxcbiAgICBwcmlvcml0eVxuICBdO1xufTtcblxuIiwiY2xhc3MgdG9kb0xpc3Qge1xuICBjb25zdHJ1Y3Rvcih0aXRsZSkge1xuICAgIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgICB0aGlzLml0ZW1zID0ge307XG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjcmVhdGVUb0RvTGlzdCh0aXRsZSkge1xuICBsZXQgbGlzdCA9IG5ldyB0b2RvTGlzdCh0aXRsZSk7XG4gIHJldHVybiBsaXN0O1xufTsiLCJpbXBvcnQgY3JlYXRlTmV3VG9EbyBmcm9tIFwiLi90b2RvLWl0ZW1cIjtcbmltcG9ydCBjcmVhdGVUb0RvTGlzdCBmcm9tIFwiLi90b2RvLWxpc3RcIjtcblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGQtdG9kb1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gIGxldCB0b2RvID0gY3JlYXRlTmV3VG9EbygpO1xuICBjb25zb2xlLmxvZyh0b2RvKTtcbn0pO1xuXG53aW5kb3cub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gIGxldCBsaXN0Q29sbGVjdGlvblxuICBpZiAobG9jYWxTdG9yYWdlLmxlbmd0aCA9PSAwKSB7XG4gICAgbGlzdENvbGxlY3Rpb24gPSBpbml0aWFsaXplUGFnZSgpO1xuICB9IGVsc2Uge1xuICAgIGxpc3RDb2xsZWN0aW9uID0gbG9hZEZyb21TdG9yYWdlKCk7XG4gIH07XG4gIGxldCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpc3RzLWNvbnRhaW5lclwiKTtcbiAgY29uc29sZS5sb2cobGlzdENvbGxlY3Rpb24pO1xuICBjb25zb2xlLmxvZyhjb250YWluZXIpO1xuXG5cbiAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMobGlzdENvbGxlY3Rpb24pKSB7XG4gICAgY29uc29sZS5sb2coa2V5KTtcbiAgICBjb25zb2xlLmxvZyh2YWx1ZSk7XG5cbiAgICBkaXNwbGF5TGlzdChrZXksIHZhbHVlLCBjb250YWluZXIpO1xuICB9O1xufTsgXG5cbmZ1bmN0aW9uIGluaXRpYWxpemVQYWdlKCkge1xuICBsZXQgbGlzdENvbGxlY3Rpb24gPSB7fTtcbiAgbGV0IGxpc3QgPSBjcmVhdGVUb0RvTGlzdChcIkRlZmF1bHQgTGlzdFwiKTtcblxuICBsaXN0Q29sbGVjdGlvblsxXSA9IGxpc3Q7XG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwibGlzdENvbGxlY3Rpb25cIiwgSlNPTi5zdHJpbmdpZnkobGlzdENvbGxlY3Rpb24pKTtcblxuICByZXR1cm4gbGlzdENvbGxlY3Rpb247XG59O1xuXG5mdW5jdGlvbiBsb2FkRnJvbVN0b3JhZ2UoKSB7XG4gIGxldCBsaXN0Q29sbGVjdGlvbiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJsaXN0Q29sbGVjdGlvblwiKSk7XG4gIHJldHVybiBsaXN0Q29sbGVjdGlvbjtcbn07XG5cbmZ1bmN0aW9uIGRpc3BsYXlMaXN0KGtleSwgdmFsdWUsIGNvbnRhaW5lcikge1xuICBsZXQgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgYnV0dG9uLmRhdGFzZXQuaWQgPSBrZXk7XG4gIGJ1dHRvbi5pbm5lckhUTUwgPSB2YWx1ZS50aXRsZTtcblxuICBjb25zb2xlLmxvZyhidXR0b24pO1xuICBjb25zb2xlLmxvZyhjb250YWluZXIpO1xuXG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChidXR0b24pO1xufVxuXG4iXSwibmFtZXMiOlsidG9kb0l0ZW0iLCJjb25zdHJ1Y3RvciIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJkdWVEYXRlIiwicHJpb3JpdHkiLCJ0aGlzIiwibm90ZXMiLCJjaGVja2xpc3QiLCJ0b2RvTGlzdCIsIml0ZW1zIiwiZGlzcGxheUxpc3QiLCJrZXkiLCJ2YWx1ZSIsImNvbnRhaW5lciIsImJ1dHRvbiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImRhdGFzZXQiLCJpZCIsImlubmVySFRNTCIsImNvbnNvbGUiLCJsb2ciLCJhcHBlbmRDaGlsZCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZG8iLCJpbmZvIiwiZ2V0VG9kb0luZm8iLCJjcmVhdGVOZXdUb0RvIiwid2luZG93Iiwib25sb2FkIiwibGlzdENvbGxlY3Rpb24iLCJsb2NhbFN0b3JhZ2UiLCJsZW5ndGgiLCJsaXN0Iiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJpbml0aWFsaXplUGFnZSIsInBhcnNlIiwiZ2V0SXRlbSIsIk9iamVjdCIsImVudHJpZXMiXSwic291cmNlUm9vdCI6IiJ9